name: 'BlueBuild'
description: 'Build a custom OS image'
inputs:
  recipe:
    description: |
      The [recipe](https://blue-build.org/reference/recipe/) file to build the image from, relative to the `config/` or `recipes/` directory.
    required: true
    default: 'recipe.yml'
  cosign_private_key:
    description: |
      The Sigstore/cosign secret used to sign the image.

      Example: `&#36;{{ secrets.SIGNING_SECRET }}`
    required: true
  registry_token:
    description: |
      The token used to sign into the container registry.

      Example: `&#36;{{ github.token }}`
    required: false
    default: ''
  registry_username:
    description: |
      The username used to sign into the container registry.
    required: false
    default: ${{ github.repository_owner }}
  pr_event_number:
    description: |
      The event number used to tag images pushed from pull requests.

      Example: `&#36;{{ github.event.number }}`
    required: true
  maximize_build_space:
    description: |
      Whether to run the unwanted software remover to maximize build space in the GitHub builder.
      Disable this with 'false' if your image doesn't take up a lot of space and you'd rather have shorter build times.
    required: false
    default: 'false'
  use_unstable_cli:
    description: |
      If true, this action pulls the `main` branch of blue-build/cli instead of the stable version the current action version is configured to use by default.
      This feature is useful for testing new features, but should not be used in production.
      Input must match the string 'true' for the unstable version to be used.
    required: false
    default: 'false'
  cli_version:
    description: |
      Set this with a tag, sha, or branch name for the blue-build/cli repo to use that particular version of the CLI tool. This will override the `use_unstable_cli` input for the action.
    required: false
  registry:
    description: |
      The container registry to push the built image to.
    required: false
    default: 'ghcr.io'
  registry_namespace:
    description: |
     The namespace on the registry to push to.

     Example: `ublue-os`
    required: false
    default: ${{ github.repository_owner }}
  working_directory:
    description: |
      Changes working directory for whole build.
      For example, setting this to `./abc/` would cause for the recipe to be read from `./abc/recipes/recipe.yml`.
    required: false
    default: ./

runs:
  using: "composite"
  steps:
    # building custom images might take a lot of space,
    # so it's best to remove unneeded software
    - name: Maximize build space
      uses: jlumbroso/free-disk-space@v1.3.1
      if: ${{ inputs.maximize_build_space == 'true' }}

    - uses: sigstore/cosign-installer@v3.5.0

    # clones user's repo
    - uses: actions/checkout@v4

    - name: Determine Vars
      id: build_vars
      shell: bash
      env:
        RECIPE: ${{ inputs.recipe }}
      run: |
        if [[ "${{ inputs.use_unstable_cli }}" == "true" && -z "${{ inputs.cli_version }}" ]]; then
          CLI_VERSION_TAG=":main"
        elif [ -n "${{ inputs.cli_version }}" ]; then
          CLI_VERSION_TAG="${{ inputs.cli_version }}"
        else
          CLI_VERSION_TAG=":v0.8-installer"
        fi
        echo "cli_version=${CLI_VERSION_TAG}" >> ${GITHUB_OUTPUT}

        RECIPE_PATH=""
        if [ -f "./config/${RECIPE}" ]; then
          RECIPE_PATH="./config/${RECIPE}"
        else
          RECIPE_PATH="./recipes/${RECIPE}"
        fi
        echo "recipe_path=${RECIPE_PATH}" >> ${GITHUB_OUTPUT}

    - name: Install BlueBuild
      shell: bash
      env:
        CLI_VERSION_TAG: ${{ steps.build_vars.outputs.cli_version }}
      run: |
        podman create \
          --name blue-build-installer \
          ghcr.io/blue-build/cli${{ env.CLI_VERSION_TAG }}
        podman cp blue-build-installer:/out/bluebuild /usr/local/bin/bluebuild
        podman rm blue-build-installer
        bluebuild --version

    # blue-build/cli does the heavy lifting
    - name: Build Image
      shell: bash
      working-directory: ${{ inputs.working_directory }}
      env:
        COSIGN_PRIVATE_KEY: ${{ inputs.cosign_private_key }}
        GH_TOKEN: ${{ inputs.registry_token }}
        BB_PASSWORD: ${{ inputs.registry_token }}
        BB_USERNAME: ${{ inputs.registry_username }}
        BB_REGISTRY: ${{ inputs.registry }}
        BB_REGISTRY_NAMESPACE: ${{ inputs.registry_namespace }}
        GH_PR_EVENT_NUMBER: ${{ inputs.pr_event_number }}
        RECIPE_PATH: ${{ steps.build_vars.outputs.recipe_path }}
        RUST_LOG_STYLE: always
        CLICOLOR_FORCE: '1'
      run: |
        BUILD_OPTS="--compression-format gzip --build-driver podman --inspect-driver podman --run-driver podman"
        bluebuild build -v --push ${BUILD_OPTS} ${RECIPE_PATH}
